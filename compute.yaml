AWSTemplateFormatVersion: '2010-09-09'
Description: Compute Stack

Resources:
  EC2SecurityGroup:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      GroupDescription: Enable SSH and HTTP access
      VpcId: !ImportValue VPCId
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0

  DjangoEC2Instance:
    Type: 'AWS::EC2::Instance'
    Properties:
      InstanceType: t2.micro
      KeyName: your-key-name
      ImageId: ami-0c55b159cbfafe1f0 # Update with the latest Amazon Linux 2 AMI
      SubnetId: !ImportValue PublicSubnetId
      SecurityGroupIds:
        - !Ref EC2SecurityGroup
      UserData:
        Fn::Base64: !Sub |
          #!/bin/bash
          yum update -y
          yum install -y python3 python3-pip
          pip3 install django
          # Add more commands to set up your Django application
      IamInstanceProfile: !Ref DjangoEC2InstanceProfile

  DjangoEC2InstanceProfile:
    Type: 'AWS::IAM::InstanceProfile'
    Properties:
      Roles:
        - !Ref DjangoEC2InstanceRole

  DjangoEC2InstanceRole:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: 'ec2.amazonaws.com'
            Action: 'sts:AssumeRole'
      Policies:
        - PolicyName: S3AccessPolicy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - 's3:ListBucket'
                  - 's3:GetObject'
                  - 's3:PutObject'
                Resource:
                  - !ImportValue S3BucketName
                  - !Sub 'arn:aws:s3:::${S3Bucket}/*'

Outputs:
  DjangoEC2InstancePublicDNS:
    Description: Public DNS of the EC2 instance
    Value: !GetAtt DjangoEC2Instance.PublicDnsName
